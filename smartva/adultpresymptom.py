import copy
import csv
import os

from stemming.porter2 import stem

from smartva import defaultfill
from smartva.answer_ranges import adult_rangelist
from smartva.presymptom_conversions import adult_conversionVars
from smartva.word_conversions import adult_wordsToVars
from smartva.loggers import status_logger, warning_logger

# new headers generated by this step in processing
generatedHeaders = ['g4_03b', 'a2_01b', 'a2_22b', 'a2_24b', 'a2_26b', 'a2_28b', 'a2_33b', 'a2_37b', 'a2_41b', 'a2_54b',
                    'a2_58b', 'a2_62b', 'a2_65b', 'a2_68b', 'a2_70b', 'a2_73b', 'a2_76b', 'a2_79b', 'a2_83b', 'a2_86b',
                    'a4_02_1', 'a4_02_2', 'a4_02_3', 'a4_02_4', 'a4_02_5a', 'a4_02_6', 'a4_02_7', 'a5_01_8', 'a5_04b',
                    'a6_02_1', 'a6_02_2', 'a6_02_3', 'a6_02_4', 'a6_02_5', 'a6_02_6', 'a6_02_8', 'a6_02_9', 'a6_02_10',
                    'a6_02_11', 'a6_02_12a', 'a6_02_13', 'a6_02_14', 'a6_02_15']


class PreSymptomPrep(object):
    def __init__(self, input_file, output_dir, shortform):
        self.inputFilePath = input_file
        self.output_dir = output_dir
        self.want_abort = 0
        self.shortform = shortform
        self.warnings = 0

    def run(self):

        if self.shortform:
            adult_defaultFill = defaultfill.adult_short
        else:
            adult_defaultFill = defaultfill.adult_defaultFill

        reader = csv.reader(open(self.inputFilePath, 'rb'))
        warning_logger.warning('Adult presymptom warnings:')

        matrix = list()
        headers = list()

        status_logger.info('Adult :: Processing presymptom data')

        first = 1
        # read in new .csv for processing
        # we add the generated headers later this time
        for row in reader:
            if first == 1:
                for col in row:
                    headers.append(col)
                first = 0

            else:
                matrix.append(row)

        # make sure we have data, else just stop this module        
        if len(matrix) < 1:
            status_logger.info('Adult :: No Adult data, skipping module.')
            return 0

        adultwriter = csv.writer(open(self.output_dir + os.sep + 'adult-presymptom.csv', 'wb', buffering=0))

        # drop all child variables
        # must iterate over a copy because we can't change values in a list we're iterating over
        headers_copy = copy.deepcopy(headers)
        for col in headers_copy:
            if col.startswith("c") or col.startswith("p"):
                index = headers.index(col)
                for row in matrix:
                    del row[index]
                headers.remove(col)

        # make a copy of the new list
        headers_old = copy.deepcopy(headers)

        # switch to new variables:
        for i, col in enumerate(headers):
            # only swap headers with values to swap
            try:
                swap = adult_conversionVars[col]
                headers[i] = swap
            except KeyError:
                i = 1  # noop

        # add new headers:
        for newheader in generatedHeaders:
            headers.append(newheader)

        # create the placeholders in our matrix for new headers
        for row in matrix:
            for h in generatedHeaders:
                # special case for injuries
                if h == 'a5_04b':
                    row.append("")
                else:
                    row.append("0")

        error = 0
        status_logger.info('Adult :: Verifying answers fall within legal bounds')
        for j, row in enumerate(matrix):
            for i, col in enumerate(row):
                header = headers[i]
                if col != '':
                    # if it's empty, we just skip it.  not sure there's a "required"
                    rangetest = adult_rangelist.get(header)
                    if not (rangetest is None or rangetest == ''):
                        answerArray = col.split(' ')
                        for answer in answerArray:
                            if int(answer) not in rangetest:
                                # ERROR
                                updatestr = 'Adult :: value %s in row %s for col %s is not legal for variable %s, please see Codebook for legal values' % (col, j + 2, i + 1, header)
                                warning_logger.warning(updatestr)
                                error = 1
        if error == 0:
            status_logger.info('Adult :: Answers verified')
        else:
            status_logger.info('Adult :: Warnings found, please check warnings.txt')

        # calculations for the generated variables:
        # i.e. recode
        # do this before skip patterns so generted variabels aren't 0
        for row in matrix:
            index = headers.index('g4_03b')
            if row[headers.index('g4_03a')] == '11':
                row[index] = row[headers_old.index('gen_4_3a')]
            elif row[headers.index('g4_03a')] == '12':
                row[index] = row[headers_old.index('gen_4_3b')]
            elif row[headers.index('g4_03a')] == '13':
                row[index] = row[headers_old.index('gen_4_3c')]

            index = headers.index('a2_01b')
            if row[headers.index('a2_01a')] == '1':
                row[index] = row[headers_old.index('adult_2_1a')]
            if row[headers.index('a2_01a')] == '2':
                row[index] = row[headers_old.index('adult_2_1b')]
            if row[headers.index('a2_01a')] == '4':
                row[index] = row[headers_old.index('adult_2_1c')]
            if row[headers.index('a2_01a')] == '5':
                row[index] = row[headers_old.index('adult_2_1d')]

            index = headers.index('a2_22b')
            if row[headers.index('a2_22a')] == '4':
                row[index] = row[headers_old.index('adult_2_22a')]
            if row[headers.index('a2_22a')] == '2':
                row[index] = row[headers_old.index('adult_2_22b')]

            index = headers.index('a2_24b')
            if row[headers.index('a2_24a')] == '4':
                row[index] = row[headers_old.index('adult_2_24a')]
            if row[headers.index('a2_24a')] == '2':
                row[index] = row[headers_old.index('adult_2_24b')]

            index = headers.index('a2_26b')
            if row[headers.index('a2_26a')] == '4':
                row[index] = row[headers_old.index('adult_2_26a')]
            if row[headers.index('a2_26a')] == '2':
                row[index] = row[headers_old.index('adult_2_26b')]

            index = headers.index('a2_28b')
            if row[headers.index('a2_28a')] == '4':
                row[index] = row[headers_old.index('adult_2_28a')]
            if row[headers.index('a2_28a')] == '2':
                row[index] = row[headers_old.index('adult_2_28b')]

            index = headers.index('a2_33b')
            if row[headers.index('a2_33a')] == '4':
                row[index] = row[headers_old.index('adult_2_33a')]
            if row[headers.index('a2_33a')] == '2':
                row[index] = row[headers_old.index('adult_2_33b')]

            index = headers.index('a2_37b')
            if row[headers.index('a2_37a')] == '4':
                row[index] = row[headers_old.index('adult_2_37a')]
            if row[headers.index('a2_37a')] == '2':
                row[index] = row[headers_old.index('adult_2_37b')]

            index = headers.index('a2_41b')
            if row[headers.index('a2_41a')] == '4':
                row[index] = row[headers_old.index('adult_2_41a')]
            if row[headers.index('a2_41a')] == '2':
                row[index] = row[headers_old.index('adult_2_41b')]

            index = headers.index('a2_54b')
            if row[headers.index('a2_54a')] == '5':
                row[index] = row[headers_old.index('adult_2_54a')]
            if row[headers.index('a2_54a')] == '4':
                row[index] = row[headers_old.index('adult_2_54b')]

            index = headers.index('a2_58b')
            if row[headers.index('a2_58a')] == '4':
                row[index] = row[headers_old.index('adult_2_58a')]
            if row[headers.index('a2_58a')] == '2':
                row[index] = row[headers_old.index('adult_2_58b')]

            index = headers.index('a2_62b')
            if row[headers.index('a2_62a')] == '5':
                row[index] = row[headers_old.index('adult_2_62a')]
            if row[headers.index('a2_62a')] == '4':
                row[index] = row[headers_old.index('adult_2_62b')]
            if row[headers.index('a2_62a')] == '2':
                row[index] = row[headers_old.index('adult_2_62c')]

            index = headers.index('a2_65b')
            if row[headers.index('a2_65a')] == '4':
                row[index] = row[headers_old.index('adult_2_65a')]
            if row[headers.index('a2_65a')] == '2':
                row[index] = row[headers_old.index('adult_2_65b')]

            index = headers.index('a2_68b')
            if row[headers.index('a2_68a')] == '4':
                row[index] = row[headers_old.index('adult_2_68a')]
            if row[headers.index('a2_68a')] == '2':
                row[index] = row[headers_old.index('adult_2_68b')]

            index = headers.index('a2_70b')
            if row[headers.index('a2_70a')] == '5':
                row[index] = row[headers_old.index('adult_2_70a')]
            if row[headers.index('a2_70a')] == '4':
                row[index] = row[headers_old.index('adult_2_70b')]

            index = headers.index('a2_73b')
            if row[headers.index('a2_73a')] == '4':
                row[index] = row[headers_old.index('adult_2_73a')]
            if row[headers.index('a2_73a')] == '2':
                row[index] = row[headers_old.index('adult_2_73b')]

            index = headers.index('a2_76b')
            if row[headers.index('a2_76a')] == '4':
                row[index] = row[headers_old.index('adult_2_76a')]
            if row[headers.index('a2_76a')] == '2':
                row[index] = row[headers_old.index('adult_2_76b')]

            index = headers.index('a2_79b')
            if row[headers.index('a2_79a')] == '4':
                row[index] = row[headers_old.index('adult_2_79a')]
            if row[headers.index('a2_79a')] == '2':
                row[index] = row[headers_old.index('adult_2_79b')]

            index = headers.index('a2_83b')
            if row[headers.index('a2_83a')] == '6':
                row[index] = row[headers_old.index('adult_2_83a')]
            if row[headers.index('a2_83a')] == '5':
                row[index] = row[headers_old.index('adult_2_83b')]

            index = headers.index('a2_86b')
            if row[headers.index('a2_86a')] == '4':
                row[index] = row[headers_old.index('adult_2_86a')]
            if row[headers.index('a2_86a')] == '2':
                row[index] = row[headers_old.index('adult_2_86b')]
            if row[headers.index('a2_86a')] == '1':
                row[index] = row[headers_old.index('adult_2_86c')]

            # adult_4_2 can have multiple answers
            adult42list = row[headers_old.index('adult_4_2')].split(' ')
            if '1' in adult42list:
                row[headers.index('a4_02_1')] = '1'
            if '2' in adult42list:
                row[headers.index('a4_02_2')] = '1'
            if '3' in adult42list:
                row[headers.index('a4_02_3')] = '1'
            if '4' in adult42list:
                row[headers.index('a4_02_4')] = '1'
            if '11' in adult42list:
                row[headers.index('a4_02_5a')] = '1'
            if '8' in adult42list:
                row[headers.index('a4_02_6')] = '1'
            if '9' in adult42list:
                row[headers.index('a4_02_7')] = '1'

            index = headers.index('a5_01_8')
            if row[headers.index('adult_5_1')] == '0':
                row[index] = '1'

            index = headers.index('a5_04b')
            if row[headers.index('a5_04a')] == '5':
                row[index] = row[headers_old.index('adult_5_5a')]
            if row[headers.index('a5_04a')] == '4':
                row[index] = row[headers_old.index('adult_5_5b')]
            if row[headers.index('a5_04a')] == '2':
                row[index] = row[headers_old.index('adult_5_5c')]
            if row[headers.index('a5_04a')] == '1':
                row[index] = row[headers_old.index('adult_5_5d')]

            # adult_6_2 can have multiple answers
            adult62list = row[headers_old.index('adult_6_2')].split(' ')
            if '1' in adult62list:
                row[headers.index('a6_02_1')] = '1'
            if '2' in adult62list:
                row[headers.index('a6_02_2')] = '1'
            if '3' in adult62list:
                row[headers.index('a6_02_3')] = '1'
            if '4' in adult62list:
                row[headers.index('a6_02_4')] = '1'
            if '5' in adult62list:
                row[headers.index('a6_02_5')] = '1'
            if '6' in adult62list:
                row[headers.index('a6_02_6')] = '1'
            if '7' in adult62list:
                row[headers.index('a6_02_8')] = '1'
            if '8' in adult62list:
                row[headers.index('a6_02_9')] = '1'
            if '9' in adult62list:
                row[headers.index('a6_02_10')] = '1'
            if '10' in adult62list:
                row[headers.index('a6_02_11')] = '1'
            if '11' in adult62list:
                row[headers.index('a6_02_12a')] = '1'
            if '12' in adult62list:
                row[headers.index('a6_02_13')] = '1'
            if '88' in adult62list:
                row[headers.index('a6_02_14')] = '1'
            if '99' in adult62list:
                row[headers.index('a6_02_15')] = '1'

            # added for shortform
            if self.shortform:
                index = headers.index('a2_08b')
                if row[headers.index('a2_08a')] == '4':
                    row[index] = row[headers_old.index('adult_2_8a')]
                index = headers.index('a2_15b')
                if row[headers.index('a2_15a')] == '4':
                    row[index] = row[headers_old.index('adult_2_15a')]
                index = headers.index('a3_08b')
                if row[headers.index('a3_08a')] == '3':
                    row[index] = row[headers_old.index('adult_3_8a')]
                index = headers.index('a3_11b')
                if row[headers.index('a3_11a')] == '2':
                    row[index] = row[headers_old.index('adult_3_11a')]
                index = headers.index('a3_16b')
                if row[headers.index('a3_16a')] == '5':
                    row[index] = row[headers_old.index('adult_3_16a')]
                index = headers.index('a4_04')
                if row[headers.index('adult_4_4')] == '1':
                    row[index] = row[headers_old.index('adult_4_4a')]
                else:
                    row[index] = '0'

        # check skip patterns
        for i, row in enumerate(matrix):
            # i starts at 0, header row is 1 in excel, so do i+2 for the actual data row
            a2_02 = row[headers.index('a2_02')]
            if a2_02 != '1':
                a2_03a = row[headers.index('a2_03a')]
                if not (a2_03a is None or a2_03a == ''):
                    self.printWarning('a2_03a', i, row, headers, adult_defaultFill)
                a2_03b = row[headers.index('a2_03b')]
                if not (a2_03b is None or a2_03b == ''):
                    self.printWarning('a2_03b', i, row, headers, adult_defaultFill)
                a2_04 = row[headers.index('a2_04')]
                if not (a2_04 is None or a2_04 == ''):
                    self.printWarning('a2_04', i, row, headers, adult_defaultFill)
                a2_05 = row[headers.index('a2_04')]
                if not (a2_05 is None or a2_05 == ''):
                    self.printWarning('a2_05', i, row, headers, adult_defaultFill)
                a2_06 = row[headers.index('a2_04')]
                if not (a2_06 is None or a2_06 == ''):
                    self.printWarning('a2_06', i, row, headers, adult_defaultFill)
            a2_07 = row[headers.index('a2_07')]
            if a2_07 != '1':
                a2_08a = row[headers.index('a2_08a')]
                if not (a2_08a is None or a2_08a == ''):
                    self.printWarning('a2_08a', i, row, headers, adult_defaultFill)
                a2_08b = row[headers.index('a2_08b')]
                if not (a2_08b is None or a2_08b == ''):
                    self.printWarning('a2_08b', i, row, headers, adult_defaultFill)
                a2_09_1a = row[headers.index('a2_09_1a')]
                if not (a2_09_1a is None or a2_09_1a == ''):
                    self.printWarning('a2_09_1a', i, row, headers, adult_defaultFill)
                a2_09_1b = row[headers.index('a2_09_1b')]
                if not (a2_09_1b is None or a2_09_1b == ''):
                    self.printWarning('a2_09_1b', i, row, headers, adult_defaultFill)
                a2_09_2a = row[headers.index('a2_09_2a')]
                if not (a2_09_2a is None or a2_09_2a == '' or a2_09_2a == '0'):
                    self.printWarning('a2_09_2a', i, row, headers, adult_defaultFill)

                # TODO - Verify this code.
                # doesn't exist in electronic version
                # a2_09_2b = row[headers.index('a2_09_2b')]
                # if not (a2_09_2b is None or a2_09_2b == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable should be blank, setting to default and continuing' % (i + 2, headers.index('a2_09_2b'))
                #     warning_logger.warning(updatestr)
                #     a2_09_2b')] = str(adult_defaultFill.get(''))

            a2_10 = row[headers.index('a2_10')]
            if a2_10 != '1':
                a2_11 = row[headers.index('a2_11')]
                if not (a2_11 is None or a2_11 == ''):
                    self.printWarning('a2_11', i, row, headers, adult_defaultFill)
            a2_13 = row[headers.index('a2_13')]
            if a2_13 != '1':
                a2_14 = row[headers.index('a2_14')]
                if not (a2_14 is None or a2_14 == ''):
                    self.printWarning('a2_14', i, row, headers, adult_defaultFill)
            a2_14 = row[headers.index('a2_14')]
            if a2_13 != '1' or a2_14 != '1':
                a2_15a = row[headers.index('a2_15a')]
                if not (a2_15a is None or a2_15a == ''):
                    self.printWarning('a2_15a', i, row, headers, adult_defaultFill)
                a2_15b = row[headers.index('a2_15b')]
                if not (a2_15b is None or a2_15b == ''):
                    self.printWarning('a2_15b', i, row, headers, adult_defaultFill)
            a2_18 = row[headers.index('a2_18')]
            if a2_18 != '1':
                a2_19 = row[headers.index('a2_19')]
                if not (a2_19 is None or a2_19 == ''):
                    self.printWarning('a2_19', i, row, headers, adult_defaultFill)
            a2_21 = row[headers.index('a2_21')]
            if a2_21 != '1':
                a2_22a = row[headers.index('a2_22a')]
                if not (a2_22a is None or a2_22a == ''):
                    self.printWarning('a2_22a', i, row, headers, adult_defaultFill)
                a2_22b = row[headers.index('a2_22b')]
                if not (a2_22b is None or a2_22b == '' or a2_22b == '0'):
                    self.printWarning('a2_22b', i, row, headers, adult_defaultFill)
            a2_23 = row[headers.index('a2_23')]
            if a2_23 != '1':
                a2_24a = row[headers.index('a2_24a')]
                if not (a2_24a is None or a2_24a == ''):
                    self.printWarning('a2_24a', i, row, headers, adult_defaultFill)
                a2_24b = row[headers.index('a2_24b')]
                if not (a2_24b is None or a2_24b == '' or a2_24b == '0'):
                    self.printWarning('a2_24b', i, row, headers, adult_defaultFill)
            a2_25 = row[headers.index('a2_25')]
            if a2_25 != '1':
                a2_26a = row[headers.index('a2_26a')]
                if not (a2_26a is None or a2_26a == ''):
                    self.printWarning('a2_26a', i, row, headers, adult_defaultFill)
                a2_26b = row[headers.index('a2_26b')]
                if not (a2_26b is None or a2_26b == '' or a2_26b == '0'):
                    self.printWarning('a2_26b', i, row, headers, adult_defaultFill)
            a2_27 = row[headers.index('a2_27')]
            if a2_27 != '1':
                a2_28a = row[headers.index('a2_28a')]
                if not (a2_28a is None or a2_28a == ''):
                    self.printWarning('a2_28a', i, row, headers, adult_defaultFill)
                a2_28b = row[headers.index('a2_28b')]
                if not (a2_28b is None or a2_28b == '' or a2_28b == '0'):
                    self.printWarning('a2_28b', i, row, headers, adult_defaultFill)
            a2_32 = row[headers.index('a2_32')]
            if a2_32 != '1':
                a2_33a = row[headers.index('a2_33a')]
                if not (a2_33a is None or a2_33a == ''):
                    self.printWarning('a2_33a', i, row, headers, adult_defaultFill)
                a2_33b = row[headers.index('a2_33b')]
                if not (a2_33b is None or a2_33b == '' or a2_33b == '0'):
                    self.printWarning('a2_33b', i, row, headers, adult_defaultFill)
                a2_34 = row[headers.index('a2_34')]
                if not (a2_34 is None or a2_34 == ''):
                    self.printWarning('a2_34', i, row, headers, adult_defaultFill)
                a2_35 = row[headers.index('a2_35')]
                if not (a2_35 is None or a2_35 == ''):
                    self.printWarning('a2_35', i, row, headers, adult_defaultFill)
            a2_36 = row[headers.index('a2_36')]
            if a2_36 != '1':
                a2_37a = row[headers.index('a2_37a')]
                if not (a2_37a is None or a2_37a == ''):
                    self.printWarning('a2_37a', i, row, headers, adult_defaultFill)
                a2_37b = row[headers.index('a2_37b')]
                if not (a2_37b is None or a2_37b == '' or a2_37b == '0'):
                    self.printWarning('a2_37b', i, row, headers, adult_defaultFill)
                a2_38 = row[headers.index('a2_38')]
                if not (a2_38 is None or a2_38 == ''):
                    self.printWarning('a2_38', i, row, headers, adult_defaultFill)
                a2_39_1 = row[headers.index('a2_39_1')]
                if not (a2_39_1 is None or a2_39_1 == ''):
                    self.printWarning('a2_39_1', i, row, headers, adult_defaultFill)

                # TODO - Verify this code.
                # doesn't exist in electronic version
                # a2_39_2 = row[headers.index('a2_39_2')]
                # if not (a2_39_2 is None or a2_39_2 == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable should be blank, setting to default and continuing' % (i+2, headers.index('a2_39_2'))
                #     warning_logger.warning(updatestr)
                #     a2_39_2')] = str(adult_defaultFill.get(''))

            a2_40 = row[headers.index('a2_40')]
            if a2_40 != '1':
                a2_41a = row[headers.index('a2_41a')]
                if not (a2_41a is None or a2_41a == ''):
                    self.printWarning('a2_41a', i, row, headers, adult_defaultFill)
                a2_41b = row[headers.index('a2_41b')]
                if not (a2_41b is None or a2_41b == '' or a2_41b == '0'):
                    self.printWarning('a2_41b', i, row, headers, adult_defaultFill)
            a2_43 = row[headers.index('a2_43')]
            if a2_43 != '1':
                a2_44 = row[headers.index('a2_44')]
                if not (a2_44 is None or a2_44 == ''):
                    self.printWarning('a2_44', i, row, headers, adult_defaultFill)
                a2_45 = row[headers.index('a2_45')]
                if not (a2_45 is None or a2_45 == ''):
                    self.printWarning('a2_45', i, row, headers, adult_defaultFill)
                a2_46a = row[headers.index('a2_46a')]
                if not (a2_46a is None or a2_46a == ''):
                    self.printWarning('a2_46a', i, row, headers, adult_defaultFill)
                a2_46b = row[headers.index('a2_46b')]
                if not (a2_46b is None or a2_46b == ''):
                    self.printWarning('a2_46b', i, row, headers, adult_defaultFill)
            a2_47 = row[headers.index('a2_47')]
            if a2_47 != '1':
                a2_48a = row[headers.index('a2_48a')]
                if not (a2_48a is None or a2_48a == ''):
                    self.printWarning('a2_48a', i, row, headers, adult_defaultFill)
                a2_48b = row[headers.index('a2_48b')]
                if not (a2_48b is None or a2_48b == ''):
                    self.printWarning('a2_48b', i, row, headers, adult_defaultFill)
            a2_50 = row[headers.index('a2_50')]
            if a2_50 != '1':
                a2_51 = row[headers.index('a2_51')]
                if not (a2_51 is None or a2_51 == ''):
                    self.printWarning('a2_51', i, row, headers, adult_defaultFill)
            a2_53 = row[headers.index('a2_53')]
            if a2_53 != '1':
                a2_54a = row[headers.index('a2_54a')]
                if not (a2_54a is None or a2_54a == ''):
                    self.printWarning('a2_54a', i, row, headers, adult_defaultFill)
                a2_54b = row[headers.index('a2_54b')]
                if not (a2_54b is None or a2_54b == '' or a2_54b == '0'):
                    self.printWarning('a2_54b', i, row, headers, adult_defaultFill)
                a2_55 = row[headers.index('a2_55')]
                if not (a2_55 is None or a2_55 == ''):
                    self.printWarning('a2_55', i, row, headers, adult_defaultFill)
                a2_56 = row[headers.index('a2_56')]
                if not (a2_56 is None or a2_56 == ''):
                    self.printWarning('a2_56', i, row, headers, adult_defaultFill)
            a2_57 = row[headers.index('a2_57')]
            if a2_57 != '1':
                a2_58a = row[headers.index('a2_58a')]
                if not (a2_58a is None or a2_58a == ''):
                    self.printWarning('a2_58a', i, row, headers, adult_defaultFill)
                a2_58b = row[headers.index('a2_58b')]
                if not (a2_58b is None or a2_58b == '' or a2_58b == '0'):
                    self.printWarning('a2_58b', i, row, headers, adult_defaultFill)
                a2_59 = row[headers.index('a2_59')]
                if not (a2_59 is None or a2_59 == ''):
                    self.printWarning('a2_59', i, row, headers, adult_defaultFill)
            a2_61 = row[headers.index('a2_61')]
            if a2_61 != '1':
                a2_62a = row[headers.index('a2_62a')]
                if not (a2_62a is None or a2_62a == ''):
                    self.printWarning('a2_62a', i, row, headers, adult_defaultFill)
                a2_62b = row[headers.index('a2_62b')]
                if not (a2_62b is None or a2_62b == '' or a2_62b == '0'):
                    self.printWarning('a2_62b', i, row, headers, adult_defaultFill)
                a2_63_1 = row[headers.index('a2_63_1')]
                if not (a2_63_1 is None or a2_63_1 == ''):
                    self.printWarning('a2_63_1', i, row, headers, adult_defaultFill)

                # TODO - Verify this code
                # not in electronic version
                # a2_63_2 = row[headers.index('a2_63_2')]
                # if not (a2_63_2 is None or a2_63_2 == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable should be blank, setting to default and continuing' % (i+2, headers.index('a2_63_2'))
                #     warning_logger.warning(updatestr)
                #     a2_63_2')] = str(adult_defaultFill.get(''))

            a2_64 = row[headers.index('a2_64')]
            if a2_64 != '1':
                a2_65a = row[headers.index('a2_65a')]
                if not (a2_65a is None or a2_65a == ''):
                    self.printWarning('a2_65a', i, row, headers, adult_defaultFill)
                a2_65b = row[headers.index('a2_65b')]
                if not (a2_65b is None or a2_65b == '' or a2_65b == '0'):
                    self.printWarning('a2_65b', i, row, headers, adult_defaultFill)
                a2_66 = row[headers.index('a2_66')]
                if not (a2_66 is None or a2_66 == ''):
                    self.printWarning('a2_66', i, row, headers, adult_defaultFill)
            a2_67 = row[headers.index('a2_67')]
            if a2_67 != '1':
                a2_68a = row[headers.index('a2_68a')]
                if not (a2_68a is None or a2_68a == ''):
                    self.printWarning('a2_68a', i, row, headers, adult_defaultFill)
                a2_68b = row[headers.index('a2_68b')]
                if not (a2_68b is None or a2_68b == '' or a2_68b == '0'):
                    self.printWarning('a2_68b', i, row, headers, adult_defaultFill)
            a2_69 = row[headers.index('a2_69')]
            if a2_69 != '1':
                a2_70a = row[headers.index('a2_70a')]
                if not (a2_70a is None or a2_70a == ''):
                    self.printWarning('a2_70a', i, row, headers, adult_defaultFill)
                a2_70b = row[headers.index('a2_70b')]
                if not (a2_70b is None or a2_70b == '' or a2_70b == '0'):
                    self.printWarning('a2_70b', i, row, headers, adult_defaultFill)
                a2_71 = row[headers.index('a2_71')]
                if not (a2_71 is None or a2_71 == ''):
                    self.printWarning('a2_71', i, row, headers, adult_defaultFill)
            a2_72 = row[headers.index('a2_72')]
            if a2_72 != '1':
                a2_73a = row[headers.index('a2_73a')]
                if not (a2_73a is None or a2_73a == ''):
                    self.printWarning('a2_73a', i, row, headers, adult_defaultFill)
                a2_73b = row[headers.index('a2_73b')]
                if not (a2_73b is None or a2_73b == '' or a2_73b == '0'):
                    self.printWarning('a2_73b', i, row, headers, adult_defaultFill)
            a2_74 = row[headers.index('a2_74')]
            if a2_74 != '1':
                a2_76a = row[headers.index('a2_76a')]
                if not (a2_76a is None or a2_76a == ''):
                    self.printWarning('a2_76a', i, row, headers, adult_defaultFill)
                a2_76b = row[headers.index('a2_76b')]
                if not (a2_76b is None or a2_76b == '' or a2_76b == '0'):
                    self.printWarning('a2_76b', i, row, headers, adult_defaultFill)
                a2_75 = row[headers.index('a2_75')]
                if not (a2_75 is None or a2_75 == ''):
                    self.printWarning('a2_75', i, row, headers, adult_defaultFill)
                a2_77 = row[headers.index('a2_77')]
                if not (a2_77 is None or a2_77 == ''):
                    self.printWarning('a2_77', i, row, headers, adult_defaultFill)
            a2_78 = row[headers.index('a2_78')]
            if a2_78 != '1':
                a2_79a = row[headers.index('a2_79a')]
                if not (a2_79a is None or a2_79a == ''):
                    self.printWarning('a2_79a', i, row, headers, adult_defaultFill)
                a2_79b = row[headers.index('a2_79b')]
                if not (a2_79b is None or a2_79b == '' or a2_79b == '0'):
                    self.printWarning('a2_79b', i, row, headers, adult_defaultFill)
                a2_80 = row[headers.index('a2_80')]
                if not (a2_80 is None or a2_80 == ''):
                    self.printWarning('a2_80', i, row, headers, adult_defaultFill)
            a2_82 = row[headers.index('a2_82')]
            if a2_82 != '1':
                a2_83a = row[headers.index('a2_83a')]
                if not (a2_83a is None or a2_83a == ''):
                    self.printWarning('a2_83a', i, row, headers, adult_defaultFill)
                a2_83b = row[headers.index('a2_83b')]
                if not (a2_83b is None or a2_83b == '' or a2_83b == '0'):
                    self.printWarning('a2_83b', i, row, headers, adult_defaultFill)
                a2_84 = row[headers.index('a2_84')]
                if not (a2_84 is None or a2_84 == ''):
                    self.printWarning('a2_84', i, row, headers, adult_defaultFill)
            a2_85 = row[headers.index('a2_85')]
            if a2_85 != '1':
                a2_86a = row[headers.index('a2_86a')]
                if not (a2_86a is None or a2_86a == ''):
                    self.printWarning('a2_86a', i, row, headers, adult_defaultFill)
                a2_86b = row[headers.index('a2_86b')]
                if not (a2_86b is None or a2_86b == '' or a2_86b == '0'):
                    self.printWarning('a2_86b', i, row, headers, adult_defaultFill)
                a2_87_1 = row[headers.index('a2_87_1')]
                if not (a2_87_1 is None or a2_87_1 == '' or a2_87_1 == '0'):
                    self.printWarning('a2_87_1', i, row, headers, adult_defaultFill)
                a2_87_10a = row[headers.index('a2_87_10a')]
                if not (a2_87_10a is None or a2_87_10a == '' or a2_87_10a == '0'):
                    self.printWarning('a2_87_10a', i, row, headers, adult_defaultFill)
                a2_87_10b = row[headers.index('a2_87_10b')]
                a2_87_10b_split = a2_87_10b.split(' ')
                if not (a2_87_10b is None or a2_87_10b == '' or '0' in a2_87_10b_split):
                    self.printWarning('a2_87_10b', i, row, headers, adult_defaultFill)
                a2_87_2 = row[headers.index('a2_87_2')]
                if not (a2_87_2 is None or a2_87_2 == '' or a2_87_2 == '0'):
                    self.printWarning('a2_87_2', i, row, headers, adult_defaultFill)
                a2_87_3 = row[headers.index('a2_87_3')]
                if not (a2_87_3 is None or a2_87_3 == '' or a2_87_3 == '0'):
                    self.printWarning('a2_87_3', i, row, headers, adult_defaultFill)
                a2_87_4 = row[headers.index('a2_87_4')]
                if not (a2_87_4 is None or a2_87_4 == '' or a2_87_4 == '0'):
                    self.printWarning('a2_87_4', i, row, headers, adult_defaultFill)
                a2_87_5 = row[headers.index('a2_87_5')]
                if not (a2_87_5 is None or a2_87_5 == '' or a2_87_5 == '0'):
                    self.printWarning('a2_87_5', i, row, headers, adult_defaultFill)
                a2_87_6 = row[headers.index('a2_87_6')]
                if not (a2_87_6 is None or a2_87_6 == '' or a2_87_6 == '0'):
                    self.printWarning('a2_87_6', i, row, headers, adult_defaultFill)
                a2_87_7 = row[headers.index('a2_87_7')]
                if not (a2_87_7 is None or a2_87_7 == '' or a2_87_7 == '0'):
                    self.printWarning('a2_87_7', i, row, headers, adult_defaultFill)
                a2_87_8 = row[headers.index('a2_87_8')]
                if not (a2_87_8 is None or a2_87_8 == '' or a2_87_8 == '0'):
                    self.printWarning('a2_87_8', i, row, headers, adult_defaultFill)
                a2_87_9 = row[headers.index('a2_87_9')]
                if not (a2_87_9 is None or a2_87_9 == '' or a2_87_9 == '0'):
                    self.printWarning('a2_87_9', i, row, headers, adult_defaultFill)
            a4_01 = row[headers.index('a4_01')]
            if a4_01 != '1':
                a4_02_1 = row[headers.index('a4_02_1')]
                if not (a4_02_1 is None or a4_02_1 == '' or a4_02_1 == '0'):
                    self.printWarning('a4_02_1', i, row, headers, adult_defaultFill)
                a4_02_2 = row[headers.index('a4_02_2')]
                if not (a4_02_2 is None or a4_02_2 == '' or a4_02_2 == '0'):
                    self.printWarning('a4_02_2', i, row, headers, adult_defaultFill)
                a4_02_3 = row[headers.index('a4_02_3')]
                if not (a4_02_3 is None or a4_02_3 == '' or a4_02_3 == '0'):
                    self.printWarning('a4_02_3', i, row, headers, adult_defaultFill)
                a4_02_4 = row[headers.index('a4_02_4')]
                if not (a4_02_4 is None or a4_02_4 == '' or a4_02_4 == '0'):
                    self.printWarning('a4_02_3', i, row, headers, adult_defaultFill)
                a4_02_5a = row[headers.index('a4_02_5a')]
                if not (a4_02_5a is None or a4_02_5a == '' or a4_02_5a == '0'):
                    self.printWarning('a4_02_5a', i, row, headers, adult_defaultFill)
                a4_02_5b = row[headers.index('a4_02_5b')]
                if not (a4_02_5b is None or a4_02_5b == ''):
                    self.printWarning('a4_02_5b', i, row, headers, adult_defaultFill)
                a4_02_6 = row[headers.index('a4_02_6')]
                if not (a4_02_6 is None or a4_02_6 == '' or a4_02_6 == '0'):
                    self.printWarning('a4_02_6', i, row, headers, adult_defaultFill)
                a4_02_7 = row[headers.index('a4_02_7')]
                if not (a4_02_7 is None or a4_02_7 == '' or a4_02_7 == '0'):
                    self.printWarning('a4_02_7', i, row, headers, adult_defaultFill)
            a4_02_1 = row[headers.index('a4_02_1')]
            if a4_02_1 != '1' or a4_01 != '1':
                a4_04 = row[headers.index('a4_04')]
                if not (a4_04 is None or a4_04 == ''):
                    self.printWarning('a4_04', i, row, headers, adult_defaultFill)
            a4_05 = row[headers.index('a4_05')]
            if a4_05 != '1':
                a4_06 = row[headers.index('a4_06')]
                if not (a4_06 is None or a4_06 == ''):
                    self.printWarning('a4_06', i, row, headers, adult_defaultFill)
            a5_01_8 = row[headers.index('a5_01_8')]
            if a5_01_8 == '1':
                a5_04a = row[headers.index('a5_04a')]
                if not (a5_04a is None or a5_04a == ''):
                    self.printWarning('a5_04a', i, row, headers, adult_defaultFill)
                a5_04b = row[headers.index('a5_04b')]
                if not (a5_04b is None or a5_04b == '' or a5_04b == '0'):
                    self.printWarning('a5_04b', i, row, headers, adult_defaultFill)
                a5_02 = row[headers.index('a5_02')]
                if not (a5_02 is None or a5_02 == ''):
                    self.printWarning('a5_02', i, row, headers, adult_defaultFill)
            a5_02 = row[headers.index('a5_02')]
            if a5_02 == '1' or a5_01_8 == '1':
                a5_03 = row[headers.index('a5_03')]
                if not (a5_03 is None or a5_03 == ''):
                    self.printWarning('a5_03', i, row, headers, adult_defaultFill)
            a6_01 = row[headers.index('a6_01')]
            if a6_01 != '1':
                a6_02_1 = row[headers.index('a6_02_1')]
                if not (a6_02_1 is None or a6_02_1 == '' or a6_02_1 == '0'):
                    self.printWarning('a6_02_1', i, row, headers, adult_defaultFill)
                a6_02_2 = row[headers.index('a6_02_2')]
                if not (a6_02_2 is None or a6_02_2 == '' or a6_02_2 == '0'):
                    self.printWarning('a6_02_2', i, row, headers, adult_defaultFill)
                a6_02_3 = row[headers.index('a6_02_3')]
                if not (a6_02_3 is None or a6_02_3 == '' or a6_02_3 == '0'):
                    self.printWarning('a6_02_3', i, row, headers, adult_defaultFill)
                a6_02_4 = row[headers.index('a6_02_4')]
                if not (a6_02_4 is None or a6_02_4 == '' or a6_02_4 == '0'):
                    self.printWarning('a6_02_4', i, row, headers, adult_defaultFill)
                a6_02_5 = row[headers.index('a6_02_5')]
                if not (a6_02_5 is None or a6_02_5 == '' or a6_02_5 == '0'):
                    self.printWarning('a6_02_5', i, row, headers, adult_defaultFill)
                a6_02_6 = row[headers.index('a6_02_6')]
                if not (a6_02_6 is None or a6_02_6 == '' or a6_02_6 == '0'):
                    self.printWarning('a6_02_6', i, row, headers, adult_defaultFill)

                # TODO - Verify this code.
                # not in electronic version
                # a6_02_7 = row[headers.index('a6_02_7')]
                # if not (a6_02_7 is None or a6_02_7 == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable should be blank, setting to default and continuing' % (i+2, headers.index('a6_02_7'))
                #     warning_logger.warning(updatestr)
                #     a6_02_7')] = str(adult_defaultFill.get(''))

                a6_02_8 = row[headers.index('a6_02_8')]
                if not (a6_02_8 is None or a6_02_8 == '' or a6_02_8 == '0'):
                    self.printWarning('a6_02_8', i, row, headers, adult_defaultFill)
                a6_02_9 = row[headers.index('a6_02_9')]
                if not (a6_02_9 is None or a6_02_9 == '' or a6_02_9 == '0'):
                    self.printWarning('a6_02_9', i, row, headers, adult_defaultFill)
                a6_02_10 = row[headers.index('a6_02_10')]
                if not (a6_02_10 is None or a6_02_10 == '' or a6_02_10 == '0'):
                    self.printWarning('a6_02_10', i, row, headers, adult_defaultFill)
                a6_02_11 = row[headers.index('a6_02_11')]
                if not (a6_02_11 is None or a6_02_11 == '' or a6_02_11 == '0'):
                    self.printWarning('a6_02_11', i, row, headers, adult_defaultFill)
                a6_02_12a = row[headers.index('a6_02_12a')]
                if not (a6_02_12a is None or a6_02_12a == '' or a6_02_12a == '0'):
                    self.printWarning('a6_02_12a', i, row, headers, adult_defaultFill)

                # TODO - Verify this code.
                # not in electronic version
                # a6_02_12b = row[headers.index('a6_02_12b')]
                # if not (a6_02_12b is None or a6_02_12b == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable should be blank, setting to default and continuing' % (i+2, headers.index('a6_02_12b'))
                #     warning_logger.warning(updatestr)
                #     a6_02_12b')] = str(adult_defaultFill.get(''))

                a6_02_13 = row[headers.index('a6_02_13')]
                if not (a6_02_13 is None or a6_02_13 == '' or a6_02_13 == '0'):
                    self.printWarning('a6_02_13', i, row, headers, adult_defaultFill)
                a6_02_14 = row[headers.index('a6_02_14')]
                if not (a6_02_14 is None or a6_02_14 == '' or a6_02_14 == '0'):
                    self.printWarning('a6_02_14', i, row, headers, adult_defaultFill)
                a6_02_15 = row[headers.index('a6_02_15')]
                if not (a6_02_15 is None or a6_02_15 == '' or a6_02_15 == '0'):
                    self.printWarning('a6_02_15', i, row, headers, adult_defaultFill)
                a6_03 = row[headers.index('a6_03')]
                if not (a6_03 is None or a6_03 == ''):
                    self.printWarning('a6_03', i, row, headers, adult_defaultFill)
            a6_04 = row[headers.index('a6_04')]
            if a6_04 != '1':
                a6_05 = row[headers.index('a6_05')]
                if not (a6_05 is None or a6_05 == ''):
                    self.printWarning('a6_05', i, row, headers, adult_defaultFill)
            a6_05 = row[headers.index('a6_05')]
            if a6_05 != '1' or a6_04 != '1':
                a6_06_1d = row[headers.index('a6_06_1d')]
                if not (a6_06_1d is None or a6_06_1d == ''):
                    self.printWarning('a6_06_1d', i, row, headers, adult_defaultFill)
                a6_06_1m = row[headers.index('a6_06_1m')]
                if not (a6_06_1m is None or a6_06_1m == ''):
                    self.printWarning('a6_06_1m', i, row, headers, adult_defaultFill)
                a6_06_1y = row[headers.index('a6_06_1y')]
                if not (a6_06_1y is None or a6_06_1y == ''):
                    self.printWarning('a6_06_1y', i, row, headers, adult_defaultFill)
                a6_06_2d = row[headers.index('a6_06_2d')]
                if not (a6_06_2d is None or a6_06_2d == ''):
                    self.printWarning('a6_06_2d', i, row, headers, adult_defaultFill)
                a6_06_2m = row[headers.index('a6_06_2m')]
                if not (a6_06_2m is None or a6_06_2m == ''):
                    self.printWarning('a6_06_2m', i, row, headers, adult_defaultFill)
                a6_06_2y = row[headers.index('a6_06_2y')]
                if not (a6_06_2y is None or a6_06_2y == ''):
                    self.printWarning('a6_06_2y', i, row, headers, adult_defaultFill)
                a6_07d = row[headers.index('a6_07d')]
                if not (a6_07d is None or a6_07d == ''):
                    self.printWarning('a6_07d', i, row, headers, adult_defaultFill)
                a6_07m = row[headers.index('a6_07m')]
                if not (a6_07m is None or a6_07m == ''):
                    self.printWarning('a6_07m', i, row, headers, adult_defaultFill)
                a6_07y = row[headers.index('a6_07y')]
                if not (a6_07y is None or a6_07y == ''):
                    self.printWarning('a6_07y', i, row, headers, adult_defaultFill)
                a6_08 = row[headers.index('a6_08')]
                if not (a6_08 is None or a6_08 == ''):
                    self.printWarning('a6_08', i, row, headers, adult_defaultFill)
            a6_09 = row[headers.index('a6_09')]
            if a6_09 != '1':
                a6_10 = row[headers.index('a6_10')]
                if not (a6_10 is None or a6_10 == ''):
                    self.printWarning('a6_10', i, row, headers, adult_defaultFill)
            a6_10 = row[headers.index('a6_10')]
            if a6_10 != '1' or a6_09 != '1':
                a6_11 = row[headers.index('a6_11')]
                if not (a6_11 is None or a6_11 == ''):
                    self.printWarning('a6_11', i, row, headers, adult_defaultFill)
                a6_12 = row[headers.index('a6_12')]
                if not (a6_12 is None or a6_12 == ''):
                    self.printWarning('a6_12', i, row, headers, adult_defaultFill)
                a6_13 = row[headers.index('a6_13')]
                if not (a6_13 is None or a6_13 == ''):
                    self.printWarning('a6_13', i, row, headers, adult_defaultFill)
                a6_14 = row[headers.index('a6_14')]
                if not (a6_14 is None or a6_14 == ''):
                    self.printWarning('a6_14', i, row, headers, adult_defaultFill)
                a6_15 = row[headers.index('a6_15')]
                if not (a6_15 is None or a6_15 == ''):
                    self.printWarning('a6_15', i, row, headers, adult_defaultFill)
            g5_02 = row[headers.index('g5_02')]
            if g5_02 != '2':
                a3_01 = row[headers.index('a3_01')]
                if not (a3_01 is None or a3_01 == ''):
                    self.printWarning('a3_01', i, row, headers, adult_defaultFill)
                a3_02 = row[headers.index('a3_02')]
                if not (a3_02 is None or a3_02 == ''):
                    self.printWarning('a3_02', i, row, headers, adult_defaultFill)
                a3_03 = row[headers.index('a3_03')]
                if not (a3_03 is None or a3_03 == ''):
                    self.printWarning('a3_03', i, row, headers, adult_defaultFill)
            a3_03 = row[headers.index('a3_03')]
            if g5_02 != '2' or a3_03 == '1':
                a3_05 = row[headers.index('a3_05')]
                if not (a3_05 is None or a3_05 == '' or a3_05 == '0'):
                    self.printWarning('a3_05', i, row, headers, adult_defaultFill)
                a3_06 = row[headers.index('a3_06')]
                if not (a3_06 is None or a3_06 == '' or a3_06 == '0'):
                    self.printWarning('a3_06', i, row, headers, adult_defaultFill)
                a3_07 = row[headers.index('a3_07')]
                if not (a3_07 is None or a3_07 == '' or a3_07 == '0'):
                    self.printWarning('a3_07', i, row, headers, adult_defaultFill)
                a3_10 = row[headers.index('a3_10')]
                if not (a3_10 is None or a3_10 == '' or a3_10 == '0'):
                    self.printWarning('a3_10', i, row, headers, adult_defaultFill)
            a3_07 = row[headers.index('a3_07')]
            # TODO - Verify these questions.
            # changed this per abie email
            if g5_02 != '2' or a3_03 == '1' or a3_07 != '1':
                a3_08a = row[headers.index('a3_08a')]
                if not (a3_08a is None or a3_08a == ''):
                    self.printWarning('a3_08a', i, row, headers, adult_defaultFill)
                a3_08b = row[headers.index('a3_08b')]
                if not (a3_08b is None or a3_08b == ''):
                    self.printWarning('a3_08b', i, row, headers, adult_defaultFill)
                    # abie.  same for this one?
                a3_09 = row[headers.index('a3_09')]
                if not (a3_09 is None or a3_09 == ''):
                    self.printWarning('a3_09', i, row, headers, adult_defaultFill)
            a3_10 = row[headers.index('a3_10')]
            if g5_02 != '2' or a3_03 == '1' or a3_10 != '1':
                a3_11a = row[headers.index('a3_11a')]
                if not (a3_11a is None or a3_11a == ''):
                    self.printWarning('a3_11a', i, row, headers, adult_defaultFill)
                a3_11b = row[headers.index('a3_11b')]
                if not (a3_11b is None or a3_11b == ''):
                    self.printWarning('a3_11b', i, row, headers, adult_defaultFill)
                a3_12 = row[headers.index('a3_12')]
                if not (a3_12 is None or a3_12 == ''):
                    self.printWarning('a3_12', i, row, headers, adult_defaultFill)
            a3_12 = row[headers.index('a3_12')]
            # abie.  same for all?
            if g5_02 != '2' or a3_03 == '1' or a3_10 != '1' or a3_12 == '1':
                a3_13 = row[headers.index('a3_13')]
                if not (a3_13 is None or a3_13 == ''):
                    self.printWarning('a3_13', i, row, headers, adult_defaultFill)
                a3_14 = row[headers.index('a3_14')]
                if not (a3_14 is None or a3_14 == ''):
                    self.printWarning('a3_14', i, row, headers, adult_defaultFill)
                a3_15 = row[headers.index('a3_15')]
                if not (a3_15 is None or a3_15 == ''):
                    self.printWarning('a3_15', i, row, headers, adult_defaultFill)
                a3_16a = row[headers.index('a3_16a')]
                if not (a3_16a is None or a3_16a == ''):
                    self.printWarning('a3_16a', i, row, headers, adult_defaultFill)
                a3_16b = row[headers.index('a3_16b')]
                if not (a3_16b is None or a3_16b == ''):
                    self.printWarning('a3_16b', i, row, headers, adult_defaultFill)
            a3_15 = row[headers.index('a3_15')]
            if g5_02 != '2' or a3_03 == '1' or a3_12 == '1' or a3_15 == '1':
                a3_17 = row[headers.index('a3_17')]
                if not (a3_17 is None or a3_17 == '' or a3_17 == '0'):
                    self.printWarning('a3_17', i, row, headers, adult_defaultFill)
            a3_17 = row[headers.index('a3_17')]
            if g5_02 != '2' or a3_03 == '1' or a3_12 == '1' or a3_15 == '1' or a3_17 == '1':
                a3_18 = row[headers.index('a3_18')]
                if not (a3_18 is None or a3_18 == '' or a3_18 == '0'):
                    self.printWarning('a3_18', i, row, headers, adult_defaultFill)
            a3_18 = row[headers.index('a3_18')]
            if (g5_02 != '2' or a3_03 != '0' or a3_15 == '1' or a3_18 != '1') and a3_17 != '1':
                a3_19 = row[headers.index('a3_19')]
                if not (a3_19 is None or a3_19 == ''):
                    self.printWarning('a3_19', i, row, headers, adult_defaultFill)
                a3_20 = row[headers.index('a3_20')]
                if not (a3_20 is None or a3_20 == ''):
                    self.printWarning('a3_20', i, row, headers, adult_defaultFill)
            if g5_02 != '2' or a3_03 != '1':
                a3_04 = row[headers.index('a3_04')]
                if not (a3_04 is None or a3_04 == ''):
                    self.printWarning('a3_04', i, row, headers, adult_defaultFill)

            # general vars

            # TODO - Verify this code.
            # not in electronic version
            # g1_07a = row[headers.index('g1_07a')]
            # if g1_07a < '12' or g1_07a == '999':
            #     g1_08 = row[headers.index('g1_08')]
            # if not (g1_08 is None or g1_08 == ''):
            #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable g1_08 should be blank, setting to default and continuing' % (i+2, headers.index('g1_08'))
            #     warning_logger.warning(updatestr)
            #     g1_08 = str(adult_defaultFill.get(''))

            g5_04a = row[headers.index('g5_04a')]
            if g5_04a is not None and g5_04a != '':
                g5_04a = int(g5_04a)
            else:
                g5_04a = 0
            if g5_04a < 12 or g5_04a == 999:
                g5_05 = row[headers.index('g5_05')]
                if not (g5_05 is None or g5_05 == ''):
                    self.printWarning('g5_05', i, row, headers, adult_defaultFill)
            if g5_04a < 5 or g5_04a == 999:
                g5_06a = row[headers.index('g5_06a')]
                if not (g5_06a is None or g5_06a == ''):
                    self.printWarning('g5_06a', i, row, headers, adult_defaultFill)

                # TODO - Verify this code.
                # not in electronic version
                # g5_06b = row[headers.index('g5_06b')]
                # if not (g5_06b is None or g5_06b == ''):
                #     updatestr = 'Adult :: WARNING: value at row %s col %s for variable g5_06b should be blank, setting to default and continuing' % (i+2, headers.index('g5_06b'))
                #     warning_logger.warning(updatestr)
                #     g5_06b')] = str(adult_defaultFill.get(''))

            # added for short form
            a4_02_2 = row[headers.index('a4_02_2')]
            a4_02_3 = row[headers.index('a4_02_3')]
            a4_02_4 = row[headers.index('a4_02_4')]
            a4_02_5a = row[headers.index('a4_02_5a')]
            if a4_01 != '1' or (a4_02_2 != '1' and a4_02_3 != '1' and a4_02_4 != '1' and a4_02_5a != '1'):
                a4_03 = row[headers.index('a4_03')]
                if not (a4_03 is None or a4_03 == ''):
                    self.printWarning('a4_03', i, row, headers, adult_defaultFill)

        if self.warnings == 1:
            status_logger.info('Adult :: Warnings found, please check warnings.txt')

        status_logger.info('Adult :: Filling in default values for empty columns')
        # fill in missing default values:
        for row in matrix:
            for i, col in enumerate(row):
                header = headers[i]
                default = adult_defaultFill.get(header)
                if default is not None and col == '':
                    row[i] = adult_defaultFill[header]

        status_logger.info('Adult :: Analyzing free text')

        if self.shortform:
            for row in matrix:
                if row[headers_old.index('adult_7_1')] == '1':
                    self.processFreeText('kidney', row, headers)
                if row[headers_old.index('adult_7_2')] == '1':
                    self.processFreeText('dialysis', row, headers)
                if row[headers_old.index('adult_7_3')] == '1':
                    self.processFreeText('fever', row, headers)
                if row[headers_old.index('adult_7_4')] == '1':
                    self.processFreeText('ami', row, headers)
                if row[headers_old.index('adult_7_5')] == '1':
                    self.processFreeText('heart', row, headers)
                if row[headers_old.index('adult_7_6')] == '1':
                    self.processFreeText('jaundice', row, headers)
                if row[headers_old.index('adult_7_7')] == '1':
                    self.processFreeText('liver', row, headers)
                if row[headers_old.index('adult_7_8')] == '1':
                    self.processFreeText('malaria', row, headers)
                if row[headers_old.index('adult_7_9')] == '1':
                    self.processFreeText('pneumonia', row, headers)
                if row[headers_old.index('adult_7_10')] == '1':
                    self.processFreeText('renal', row, headers)
                if row[headers_old.index('adult_7_11')] == '1':
                    self.processFreeText('suicide', row, headers)

        freeText = ['a5_01_9b', 'a6_08', 'a6_11', 'a6_12', 'a6_13', 'a6_14', 'a6_15', 'a7_01']

        # we've already lowercased and removed numbers at this point
        for question in freeText:
            index = headers.index(question)
            for row in matrix:
                answer = row[index]
                self.processFreeText(answer, row, headers)

        status_logger.info('Adult :: Processing duration variables')
        # fix duration variables
        durationVars = ['a2_01', 'a2_03', 'a2_08', 'a2_15', 'a2_22', 'a2_24', 'a2_26', 'a2_28', 'a2_33', 'a2_37',
                        'a2_41', 'a2_48', 'a2_54', 'a2_58', 'a2_62', 'a2_65', 'a2_68', 'a2_70', 'a2_73', 'a2_76',
                        'a2_79', 'a2_83', 'a2_86', 'a3_08', 'a3_11', 'a3_16', 'a5_04']

        # add duration variables
        for var in durationVars:
            headers.append(var)
            for row in matrix:
                row.append("")

        for var in durationVars:
            if var == 'a3_16' and self.shortform:
                continue
            a = var + 'a'
            b = var + 'b'
            aindex = headers.index(a)
            bindex = headers.index(b)
            index = headers.index(var)

            for row in matrix:
                value = row[bindex]
                v2 = row[aindex]

                if (value == '') and var == "a5_04":
                    # special case for injuries
                    row[index] = '999'
                else:
                    if value == '':
                        row[index] = '0'
                    else:
                        row[index] = float(value)
                    if row[aindex] == '1':
                        row[index] = float(row[index]) * 365.0
                    if row[aindex] == '2':
                        row[index] = float(row[index]) * 30.0
                    if row[aindex] == '3':
                        row[index] = float(row[index]) * 7.0
                    if row[aindex] == '5':
                        row[index] = float(row[index]) / 24.0
                    if row[aindex] == '6':
                        row[index] = float(row[index]) / 1440.0

        # drop old a/b variables
        # we do two loops to make sure we don't cross indexes, inefficient...
        for var in durationVars:
            a = var + 'a'
            b = var + 'b'
            aindex = headers.index(a)
            headers.remove(a)

            for row in matrix:
                del row[aindex]

            bindex = headers.index(b)
            headers.remove(b)
            for row in matrix:
                del row[bindex]

        dropme = headers.index('a4_02')
        headers.remove('a4_02')
        for row in matrix:
            del row[dropme]

        # get rid of all unused 'adult' headers
        headers_copy = copy.deepcopy(headers)
        for col in headers_copy:
            if col.startswith("adult"):
                index = headers.index(col)
                for row in matrix:
                    del row[index]
                headers.remove(col)

        adultwriter.writerow(headers)
        for row in matrix:
            adultwriter.writerow(row)

        return 1

    def abort(self):
        self.want_abort = 1

    def processFreeText(self, answer, row, headers):
        keyWords = adult_wordsToVars.keys()
        answerArray = answer.split(' ')
        for word in answerArray:
            for keyword in keyWords:
                stemmed = stem(word)
                if stemmed == keyword:
                    svar = adult_wordsToVars[keyword]
                    sindex = headers.index(svar)
                    row[sindex] = '1'

    def printWarning(self, var, row_num, row, headers, adult_defaultFill):
        updatestr = 'Adult :: WARNING: value at row %s col %s for variable %s should be blank, setting to default and continuing' % (row_num + 2, headers.index(var), var)
        warning_logger.warning(updatestr)
        row[headers.index(var)] = str(adult_defaultFill.get(var))
        self.warnings = 1
